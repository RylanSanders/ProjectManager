<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="using:ProjectDesigner.Editor"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <SolidColorBrush x:Key="SelectedBackgroundColor">#2e2b2b</SolidColorBrush>
    <SolidColorBrush x:Key="SelectedForegroundColor">#673AB7</SolidColorBrush>
    <SolidColorBrush x:Key="UnselectedBackgroundColor">#212121</SolidColorBrush>
    <SolidColorBrush x:Key="UnselectedForegroundColor">White</SolidColorBrush>

    <Color x:Key="GreenColor">#2fb553</Color>
    <Color x:Key="RedColor">#e81e36</Color>
    <Color x:Key="YellowColor">#e6e357</Color>
    <Color x:Key="MaterialDesignDarkBackgroundColor">#FF303030</Color>
    <Color x:Key="MaterialDesignDarkForegroundColor">#FFFAFAFA</Color>
    <Color x:Key="MaterialDesignDarkButtonBackgroundColor">#B17CFF</Color>
    <Color x:Key="DarkButtonBackgroundColor">#303030</Color>
    <Color x:Key="DarkButtonHighlightedBackgroundColor">#3D3D3D</Color>
    <SolidColorBrush x:Key="MaterialDesignDarkButtonBackgroundBrush">#B17CFF</SolidColorBrush>
    <SolidColorBrush x:Key="MaterialDesignDarkToolBarButtonBackgroundBrush">#303030</SolidColorBrush>
    <Style x:Key="GreenHoverButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="Background" Value="{StaticResource MaterialDesignDarkBackground}">
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                                 From="{StaticResource MaterialDesignDarkBackgroundColor}" To="{StaticResource GreenColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                     From="{StaticResource GreenColor}" To="{StaticResource MaterialDesignDarkBackgroundColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="GreenPurpleHoverButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="Background" Value="{StaticResource MaterialDesignDarkButtonBackgroundBrush}">
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                             From="{StaticResource MaterialDesignDarkButtonBackgroundColor}" To="{StaticResource GreenColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                 From="{StaticResource GreenColor}" To="{StaticResource MaterialDesignDarkButtonBackgroundColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RedHoverButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="Background" Value="{StaticResource MaterialDesignDarkBackground}">
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                             From="{StaticResource MaterialDesignDarkBackgroundColor}" To="{StaticResource RedColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                 From="{StaticResource RedColor}" To="{StaticResource MaterialDesignDarkBackgroundColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RedPurpleHoverButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="Background" Value="{StaticResource MaterialDesignDarkButtonBackgroundBrush}">
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                         From="{StaticResource MaterialDesignDarkButtonBackgroundColor}" To="{StaticResource RedColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
             From="{StaticResource RedColor}" To="{StaticResource MaterialDesignDarkButtonBackgroundColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="YellowPurpleHoverButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MaterialDesignRaisedDarkButton}">
        <Setter Property="Background" Value="{StaticResource MaterialDesignDarkButtonBackgroundBrush}">
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                         From="{StaticResource MaterialDesignDarkButtonBackgroundColor}" To="{StaticResource YellowColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
             From="{StaticResource RedColor}" To="{StaticResource MaterialDesignDarkButtonBackgroundColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="NeutralColorShiftButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource MaterialDesignDarkToolBarButtonBackgroundBrush}">
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
                     From="{StaticResource DarkButtonBackgroundColor}" To="{StaticResource DarkButtonHighlightedBackgroundColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Button.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation Storyboard.TargetProperty="(Button.Background).(SolidColorBrush.Color)" 
         From="{StaticResource DarkButtonHighlightedBackgroundColor}" To="{StaticResource DarkButtonBackgroundColor}" Duration="0:0:0.1"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <system:Double x:Key="IconSize">14</system:Double>
    <!-- You should not reference this style, this is applied dynamically to a window by calling WindowUtil.ApplyDarkWindowStyle - we do this to handle events-->
    <Style x:Key="DarkWindow" TargetType="Window">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border BorderBrush="{StaticResource MaterialDesignDarkButtonBackgroundBrush}" BorderThickness="1">
                        <DockPanel x:Name="RootWindow" Background="{DynamicResource MaterialDesignDarkBackground}" >
                            <DockPanel x:Name="TitleBar" DockPanel.Dock="Top">
                                <Button x:Name="CloseButton" DockPanel.Dock="Right" Width="46" Height="32" WindowChrome.IsHitTestVisibleInChrome="True" RenderOptions.EdgeMode="Aliased" Style="{StaticResource RedHoverButton}" Foreground="{DynamicResource MaterialDesignDarkForeground}" BorderBrush="{StaticResource MaterialDesignDarkToolBarButtonBackgroundBrush}" BorderThickness="0">
                                    <materialDesign:PackIcon Width="{StaticResource IconSize}" Height="{StaticResource IconSize}" Kind="Close" />
                                </Button>
                                <Button x:Name="MaxButton"  DockPanel.Dock="Right" Width="46" Height="32" WindowChrome.IsHitTestVisibleInChrome="True" RenderOptions.EdgeMode="Aliased" Style="{StaticResource NeutralColorShiftButton}" Foreground="{DynamicResource MaterialDesignDarkForeground}" BorderBrush="{StaticResource MaterialDesignDarkToolBarButtonBackgroundBrush}" BorderThickness="0">
                                    <materialDesign:PackIcon Width="{StaticResource IconSize}" Height="{StaticResource IconSize}" Kind="MonitorScreenshot" />
                                </Button>
                                <Button x:Name="MinButton" DockPanel.Dock="Right" Width="46" Height="32" WindowChrome.IsHitTestVisibleInChrome="True" RenderOptions.EdgeMode="Aliased" Style="{StaticResource NeutralColorShiftButton}" Foreground="{DynamicResource MaterialDesignDarkForeground}" BorderBrush="{StaticResource MaterialDesignDarkToolBarButtonBackgroundBrush}" BorderThickness="0">
                                    <materialDesign:PackIcon Width="{StaticResource IconSize}" Height="{StaticResource IconSize}" Kind="Minus" />
                                </Button>
                                <TextBlock HorizontalAlignment="Center" Foreground="{DynamicResource MaterialDesignDarkForeground}" Text="{TemplateBinding Name}"></TextBlock>
                            </DockPanel>
                            <AdornerDecorator>
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>